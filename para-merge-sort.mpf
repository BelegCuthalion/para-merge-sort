program paraMergeSort;
architecture shared (512);
const n=512;

var arr, temp: array[0..n-1] of real;
i, j, l: integer;

procedure putInPlace(index, first, isoFirst, isoLast: integer);
var rank, k: integer;
begin
	rank := 0;
	for k:=isoFirst to isoLast do
	begin
		if arr[index]>arr[k] then
			rank := rank + 1
		else if arr[index]=arr[k] then
			if index>k then
				rank := rank + 1;
	end;
	if index>isoFirst then
		temp[index+rank-first+isoFirst] := arr[index]
	else if index<isoFirst then
		temp[index+rank] := arr[index];	
end;

procedure paraMergeSort(first, last: integer);
var mid: integer;
begin
	mid := (first+last) div 2;
	if last-first>1 then
	begin
		paraMergeSort(first, mid);
		paraMergeSort(mid+1, last);
	end;
	fork forall i:=first to mid do
		putInPlace(i, first, mid+1, last);
	fork forall j:=mid+1 to last do
		putInPlace(j, mid+1, first, mid);
	join;
	join;
	for i:=first to last do
	begin
		arr[i] := temp[i];
	end;
end;

begin
	l:=0;
	for i:=0 to n-1 do
		Readln(arr[i]);
	paraMergeSort(0, n-1);
	while l<n do
	begin
		Writeln(arr[l]);
		l := l + 1;
	end;
end.